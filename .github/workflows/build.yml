name: Build APK

on:
  push:
    branches:
      - main  # Trigger on push to 'main' branch
  pull_request:
    branches:
      - main  # Trigger on pull requests to 'main' branch

jobs:
  build:
    runs-on: ubuntu-latest  # Use the latest Ubuntu runner

    steps:
      # Checkout the code from the repository
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Set up JDK 11
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'  # Specify Java version here (e.g., '11', '8', etc.)
          distribution: 'adoptopenjdk'  # Use the AdoptOpenJDK distribution

      # Install Android SDK
      - name: Install Android SDK
        run: |
          sudo apt update
          sudo apt install -y android-sdk
          echo "y" | sdkmanager --licenses
          sdkmanager "platform-tools" "build-tools;30.0.3" "android-30"

      # Check Gradle version (helpful for debugging)
      - name: Check Gradle version
        run: ./gradlew --version

      # Cache Gradle dependencies (optional but speeds up future builds)
      - name: Cache Gradle dependencies
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # Print directory contents (to check if gradlew is available)
      - name: List directory contents
        run: ls -l

      # Build the APK
      - name: Build APK
        run: ./gradlew assembleRelease  # Use assembleRelease to build the release APK

      # Upload APK artifact
      - name: Upload APK artifact
        uses: actions/upload-artifact@v2
        with:
          name: app-release
          path: app/build/outputs/apk/release/app-release.apk  # Path to the generated APK
